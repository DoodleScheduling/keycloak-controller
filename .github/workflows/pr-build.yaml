name: pr-build

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

permissions: {}

jobs:
  lint-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit    
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 #v3.5
        with:
          version: v3.4.0

      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@e6669bcd63d7cb57cb4380c33043eebe5d111992 # v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch=master --chart-dirs chart)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run chart-testing (lint)
        run: ct lint --target-branch=master --chart-dirs chart --check-version-increment=false

  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit    
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup Go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: 1.22.x
      - name: fmt
        run: make fmt
      - name: vet
        run: make vet
      - name: lint
        run: make lint
      - name: Check if working tree is dirty
        run: |
          if [[ $(git diff --stat) != '' ]]; then
            git --no-pager diff
            echo 'run <make test> and commit changes'
            exit 1
          fi

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kubernetes-version:
        - "1.27"
        - "1.28"
        - "1.29"
        - "1.30"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit    
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup Go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: 1.22.x
      - name: run test
        run: make test ENVTEST_K8S_VERSION=${{ matrix.kubernetes-version }}

  build:
    runs-on: ubuntu-latest
    outputs:
      profiles: ${{ steps.profiles.outputs.matrix }}    
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit    
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup Go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: 1.22.x
      - name: build
        run: make build
      - name: Check if working tree is dirty
        run: |
          if [[ $(git diff --stat) != '' ]]; then
            git --no-pager diff
            echo 'run <make test> and commit changes'
            exit 1
          fi
      - name: Build container image
        run: |
          make docker-build
      - name: Create image tarball
        run: |
          docker save --output keycloak-controller-container.tar keycloak-controller:latest
      - name: Upload image
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: keycloak-controller-container
          path: keycloak-controller-container.tar        
      - id: profiles
        name: Determine test profiles
        run: |
          profiles=$(ls config/tests/cases | jq -R -s -c 'split("\n")[:-1]')
          echo $profiles
          echo "::set-output name=matrix::$profiles"

  e2e-tests:
    runs-on: ubuntu-latest
    needs:
    - build
    strategy:
      matrix:
        profile: ${{ fromJson(needs.build.outputs.profiles) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup Kubernetes
        uses: engineerd/setup-kind@aa272fe2a7309878ffc2a81c56cfe3ef108ae7d0 #v0.5.0
        with:
          version: v0.17.0
      - name: Download keycloak-controller container
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a #v3.0.2
        with:
          name: keycloak-controller-container
          path: /tmp
      - name: Load images
        run: |
          docker load --input /tmp/keycloak-controller-container.tar
          docker image ls -a
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@2ba527d4d055ab63514ba50a99456fc35684947f # v2.1.0
      - name: Run test
        run: |
          make kind-test TEST_PROFILE=${{ matrix.profile }}
      - name: Debug failure
        if: failure()
        run: |
          kubectl -n kube-system describe pods
          kubectl -n keycloak-system describe pods
          kubectl -n keycloak-system get all
          kubectl -n keycloak-system logs deploy/keycloak-controller
          kubectl -n keycloak-system get keycloakrealms -o yaml

  test-chart: 
    runs-on: ubuntu-latest
    needs:
    - build
    - lint-chart
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit    
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 #v3.5

      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@e6669bcd63d7cb57cb4380c33043eebe5d111992 # v2.6.1

      - name: Create kind cluster
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0

      - name: Download keycloak-controller container
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: keycloak-controller-container
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/keycloak-controller-container.tar
          docker tag keycloak-controller:latest ghcr.io/doodlescheduling/keycloak-controller:v0.0.0
          kind load docker-image ghcr.io/doodlescheduling/keycloak-controller:v0.0.0 --name chart-testing
          docker image ls -a
          
      - name: Run chart-testing (install)
        run: ct install --target-branch=master --chart-dirs chart

  test-success:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests]
    steps:
    - run: echo "all tests succeeded"
